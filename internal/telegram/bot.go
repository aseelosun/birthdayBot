package telegram

import (
	"birthdayBot/internal/configs"
	queries "birthdayBot/internal/db"
	"database/sql"
	"fmt"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"time"
)

var mainMenu = tgbotapi.NewReplyKeyboard(
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("üíÅ‚Äç‚ôÇ –ñ–∞“£–∞—Å—ã–Ω “õ–æ—Å—É"),
		tgbotapi.NewKeyboardButton("üóë –¢—ñ–∑—ñ–º–Ω–µ–Ω –∂–æ—é"),
	),
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("üóì –¢—ñ–∑—ñ–º–¥—ñ “õ–∞—Ä–∞—É"),
	),
)
var backToMainMenu = tgbotapi.NewReplyKeyboard(
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("üîÅ –ê—Ä—Ç“õ–∞ “õ–∞–π—Ç—É"),
	),
)

type Bot struct {
	bot  *tgbotapi.BotAPI
	conf *configs.Configuration
}

func NewBot(bot *tgbotapi.BotAPI) *Bot {
	return &Bot{
		bot: bot,
	}
}

var welcomeString = "–ë“±–ª –±–æ—Ç —Å—ñ–∑–¥—ñ“£ –¥–æ—Å—ã“£—ã–∑–¥—ã“£ —Ç—É“ì–∞–Ω –∫“Ø–Ω—ñ–Ω –µ–Ω–¥—ñ –µ—à“õ–∞—à–∞–Ω ”©—Ç–∫—ñ–∑—ñ–ø –∞–ª–º–∞—É—ã“£—ã–∑–¥—ã “õ–∞–º—Ç–∞–º–∞—Å—ã–∑ –µ—Ç–µ–¥—ñ. –¢—ñ–∑—ñ–º–≥–µ –±–∞—Ä–ª—ã“õ —Ç—É“ì–∞–Ω –∫“Ø–Ω–¥–µ—Ä–¥—ñ “õ–æ—Å—ã“£—ã–∑, —Ö–∞–±–∞—Ä–ª–∞–Ω–¥—ã—Ä—É–ª–∞—Ä –æ—Ä–Ω–∞—Ç—ã“£—ã–∑ –∂”ô–Ω–µ —Ç–æ–π–ª–∞—É —É–∞“õ—ã—Ç—ã –∫–µ–ª–≥–µ–Ω–¥–µ –±–æ—Ç —Å—ñ–∑–≥–µ –ø–∏–Ω–≥ –±–µ—Ä–µ–¥—ñ!"

func (b *Bot) Start(db *sql.DB, conf *configs.Configuration) error {
	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60
	b.conf = conf

	updates := b.bot.GetUpdatesChan(u)
	var uId int

	for update := range updates {
		if update.Message != nil {
			if update.Message.IsCommand() {
				cmdText := update.Message.Command()
				if cmdText == "start" {
					msg := tgbotapi.NewMessage(update.Message.Chat.ID, "Salem "+update.Message.Chat.FirstName+"! "+welcomeString)
					msg.ReplyMarkup = mainMenu
					b.bot.Send(msg)
				} else {
					msg := tgbotapi.NewMessage(update.Message.Chat.ID, "”®–∫—ñ–Ω—ñ—à–∫–µ –æ—Ä–∞–π –º–µ–Ω start-—Ç–∞–Ω –±–∞—Å“õ–∞ –∫–æ–º–∞–Ω–¥–∞ –±—ñ–ª–º–µ–π–º—ñ–Ω :(")
					msg.ReplyMarkup = mainMenu
					b.bot.Send(msg)
				}
			} else {
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–ú–µ–Ω–µ–Ω –Ω–µ –∫–µ—Ä–µ–∫ —Ç“Ø—Å—ñ–Ω–±–µ–¥—ñ–º ü§∑")

				switch update.Message.Text {

				case mainMenu.Keyboard[0][0].Text:
					msg = tgbotapi.NewMessage(update.Message.Chat.ID, "–û–ª –∞–¥–∞–º–Ω—ã“£ –∞—Ç—ã–Ω –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑: ")
					uId, _ = queries.InsertIntoBirthdayList(db, "", "1996-12-02", 0)
					msg.ReplyMarkup = backToMainMenu
					b.bot.Send(msg)
				case mainMenu.Keyboard[0][1].Text:
					objs, err := queries.GetBirthdayList(db)
					if err != nil {
						msg := tgbotapi.NewMessage(update.Message.Chat.ID, "Database error.")
						b.bot.Send(msg)
					} else {
						if len(objs) > 0 {
							for _, obj := range objs {
								text := fmt.Sprintf("*%s* - *%s*\n", obj.BirthDate, obj.Name)
								keyboard := tgbotapi.InlineKeyboardMarkup{}
								var row []tgbotapi.InlineKeyboardButton
								btn := tgbotapi.NewInlineKeyboardButtonData("–ñ–æ—é", obj.Name)
								row = append(row, btn)
								keyboard.InlineKeyboard = append(keyboard.InlineKeyboard, row)
								msg := tgbotapi.NewMessage(update.Message.Chat.ID, text)
								msg.ReplyMarkup = keyboard
								msg.ParseMode = "markdown"
								b.bot.Send(msg)
							}
						} else {
							msg := tgbotapi.NewMessage(update.Message.Chat.ID, "”ò–∑—ñ—Ä–≥–µ —Ç—ñ–∑—ñ–º –±–æ—Å...")
							msg.ReplyMarkup = backToMainMenu
							b.bot.Send(msg)
						}
					}
				case mainMenu.Keyboard[1][0].Text:
					objs, err := queries.GetBirthdayList(db)
					if err != nil {
						msg := tgbotapi.NewMessage(update.Message.Chat.ID, "Database error.")
						b.bot.Send(msg)
					} else {
						if len(objs) > 0 {
							var text string
							for _, obj := range objs {
								text += fmt.Sprintf("*%s* - *%s*\n", obj.BirthDate, obj.Name)
								msg = tgbotapi.NewMessage(update.Message.Chat.ID, text)
							}
							msg.ReplyMarkup = backToMainMenu
							msg.ParseMode = "markdown"
							b.bot.Send(msg)
						} else {
							msg := tgbotapi.NewMessage(update.Message.Chat.ID, "”ò–∑—ñ—Ä–≥–µ —Ç—ñ–∑—ñ–º –±–æ—Å...")
							msg.ReplyMarkup = backToMainMenu
							b.bot.Send(msg)
						}

					}
				case backToMainMenu.Keyboard[0][0].Text:
					msg := tgbotapi.NewMessage(update.Message.Chat.ID, "So what..")
					msg.ReplyMarkup = mainMenu
					b.bot.Send(msg)
				default:
					//b.bot.Send(msg)
					userStatus, err := queries.GetUserStatus(db, uId)
					if err != nil {
						msg := tgbotapi.NewMessage(update.Message.Chat.ID, "Database error.")
						b.bot.Send(msg)
					} else {
						switch userStatus {
						case 0:
							name := update.Message.Text
							msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–ê–¥–∞–º–Ω—ã“£ —Ç—É“ì–∞–Ω –∫“Ø–Ω—ñ–Ω –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑. \n–§–æ—Ä–º–∞—Ç –æ—Å—ã–Ω–¥–∞–π DD/MM/YYYY –±–æ–ª—É—ã –∫–µ—Ä–µ–∫.")
							err = queries.UpdateName(db, uId, name)
							if err != nil {
								msg = tgbotapi.NewMessage(update.Message.Chat.ID, "Database error.")
								b.bot.Send(msg)
							}
							err := queries.UpdateUserStatus(db, uId, 1)
							if err != nil {
								msg := tgbotapi.NewMessage(update.Message.Chat.ID, "Database error.")
								b.bot.Send(msg)
							}
							msg.ReplyMarkup = backToMainMenu
							b.bot.Send(msg)

						case 1:
							birthDate := update.Message.Text
							_, err := time.Parse("01/02/2006", birthDate)
							if err != nil {
								msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–§–æ—Ä–º–∞—Ç –¥“±—Ä—ã—Å –µ–º–µ—Å –µ–Ω–≥—ñ–∑—ñ–ª–¥—ñ.")
								msg.ReplyMarkup = tgbotapi.NewRemoveKeyboard(true)
								b.bot.Send(msg)
								err := queries.UpdateUserStatus(db, uId, 1)
								if err != nil {
									msg := tgbotapi.NewMessage(update.Message.Chat.ID, "Database error.")
									b.bot.Send(msg)
								}
							} else {
								err := queries.UpdateBirthDate(db, uId, birthDate)
								if err != nil {
									msg := tgbotapi.NewMessage(update.Message.Chat.ID, "Database error.")
									b.bot.Send(msg)
								}
								err = queries.UpdateUserStatus(db, uId, 2)
								if err != nil {
									msg := tgbotapi.NewMessage(update.Message.Chat.ID, "Database error.")
									b.bot.Send(msg)
								}
								msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–°”ô—Ç—Ç—ñ —Ç“Ø—Ä–¥–µ –µ–Ω–≥—ñ–∑—ñ–ª–¥—ñ! üéâ")
								msg.ReplyMarkup = mainMenu
								b.bot.Send(msg)
							}

						}

					}
				}

			}
		} else if update.CallbackQuery != nil {
			fmt.Println(update.CallbackQuery.Data)
			isDeleted, err := queries.DeleteFromBirthdayList(db, update.CallbackQuery.Data)
			if err != nil {
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, "Database error.")
				b.bot.Send(msg)
			} else {
				if isDeleted {
					msg := tgbotapi.NewMessage(update.CallbackQuery.Message.Chat.ID, "–°”ô—Ç—Ç—ñ —Ç“Ø—Ä–¥–µ –∂–æ–π—ã–ª–¥—ã.")
					msg.ReplyMarkup = mainMenu
					b.bot.Send(msg)
				}
			}
		}
	}
	return nil

}
